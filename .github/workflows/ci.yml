name: CI Pipeline

on: 
  push:
    branches:
     - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clonar o código
      uses: actions/checkout@v2

    - name: Configurar o python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Instalar as dependêcias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

    - name: Notify on failure
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: 'CI Pipeline Failed'
        body: 'CI Pipeline Failed'
        to: ${{vars.VAR_EMAIL}}
        from: 'ci-notifications@gmail.com'

  deploy:
    runs-on: ubuntu-latest
    needs: "build"
    
    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurar SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 --decode > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H SEU_IP_DA_EC2 >> ~/.ssh/known_hosts

    - name: Testar conexão SSH
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@SEU_IP_DA_EC2 "echo Conexão SSH funcionando!"


    - name: Deploy para a EC2
      run: |
        ssh ubuntu@SEU_IP_DA_EC2 << 'EOF'
          cd ~/flask-app
          git pull origin main
          source venv/bin/activate
          pip install -r requirements.txt
          sudo systemctl restart flask
        EOF